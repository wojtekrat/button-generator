{"version":3,"sources":["components/menu/Menu.js","Button.js","Clipboard.js","components/sidebar/Text.js","components/sidebar/Size.js","components/colorPicker.js","components/sidebar/Color.js","components/sidebar/Border.js","components/sidebar/Hover.js","App.js","index.js"],"names":["MenuNavbar","styled","div","MenuButton","Menu","props","setIsTextSection","setIsSizeSection","setisBorderSection","setIsHoverSection","setIsColorSection","isTextSection","isSizeSection","isColorSection","isBorderSection","isHoverSection","style","backgroundColor","onClick","StyledButton","a","bgColor","textAlign","btnWidth","btnHeight","borderSize","borderStyle","borderColor","borderRadius","btnFontSize","fontColor","btnPadding","btnMargin","fontWeigth","prop","transitionTime","hoverColor","hoverBgColor","hoverBorderSize","hoverBorderStyle","hoverBorderColor","Button","text","url","isURL","isHover","isBorder","href","e","preventDefault","target","StyledClipboard","ClipboardNav","ClipboardBtn","ClipboardMsg","ClipboardSection","CopyButton","ClipboardText","Clipboard","useState","isCopied","setIsCopied","isHTML","setIsHTML","isCSS","setIsCSS","onCopyText","setTimeout","clipboardTextHTMLPlain","clipboardButtonCSS","clipboardHoverCss","clipboardAll","onCopy","TextSection","setText","setBtnFontSize","setTextAlign","setIsURL","setUrl","for","id","type","placeholder","autoComplete","maxLength","onChange","value","min","max","checked","SizeSection","setWidthChange","setHeightChange","setBtnPadding","setBtnMargin","setBorderRadius","PickerButton","PickerContainer","ColorSection","showFontColorPicker","setShowFontColorPicker","setShowBgPicker","showBgPicker","setFontColor","setBgColor","color","updatedColor","hex","BorderSection","setIsBorder","setBorderSize","setBorderStyle","setShowBorderPicker","showBorderPicker","setBorderColor","HoverSection","setIsHover","setShowHoverColor","showHoverColor","setHoverBgColor","setHoverBorderColor","setHoverBorderSize","setHoverBorderStyle","setHoverColor","setTransitionTime","setShowHoverBgColor","showHoverBgColor","setShowHoverBorderColor","showHoverBorderColor","StyledMain","StyledApp","StyledMenu","MenuSidebar","AppTitle","AppContainer","ButtonContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52233e0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuNavbar = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: #d3d3d3;\r\n  z-index: 2;\r\n`;\r\n\r\nconst MenuButton = styled.div`\r\n  padding: 5px;\r\n  background-color: #d3d3d3;\r\n  cursor: pointer;\r\n  border-right: 1px solid #f2f2f2;\r\n\r\n`;\r\n\r\nexport default function Menu(props) {\r\n  const {\r\n    setIsTextSection,\r\n    setIsSizeSection,\r\n    setisBorderSection,\r\n    setIsHoverSection,\r\n    setIsColorSection,\r\n    isTextSection,\r\n    isSizeSection,\r\n    isColorSection,\r\n    isBorderSection,\r\n    isHoverSection\r\n  } = props;\r\n\r\n\r\n  return (\r\n    <>\r\n      <MenuNavbar>\r\n        <MenuButton style={{backgroundColor: isTextSection ? '#ededed' : '#d3d3d3'}}\r\n          onClick={() => { \r\n            setIsTextSection(true);\r\n            setIsSizeSection(false);\r\n            setisBorderSection(false);\r\n            setIsHoverSection(false);\r\n            setIsColorSection(false);\r\n          }}\r\n        >\r\n          Text\r\n        </MenuButton>\r\n        <MenuButton style={{backgroundColor: isSizeSection ? '#ededed' : '#d3d3d3'}}\r\n          onClick={() => {\r\n            setIsTextSection(false);\r\n            setIsSizeSection(true);\r\n            setisBorderSection(false);\r\n            setIsHoverSection(false);\r\n            setIsColorSection(false);\r\n          }}\r\n        >\r\n          Size\r\n        </MenuButton>\r\n        <MenuButton style={{backgroundColor: isColorSection ? '#ededed' : '#d3d3d3'}}\r\n          onClick={() => {\r\n            setIsTextSection(false);\r\n            setIsSizeSection(false);\r\n            setisBorderSection(false);\r\n            setIsHoverSection(false);\r\n            setIsColorSection(true);\r\n          }}\r\n        >\r\n          Color\r\n        </MenuButton>\r\n        <MenuButton style={{backgroundColor: isBorderSection ? '#ededed' : '#d3d3d3'}}\r\n          onClick={() => {\r\n            setIsTextSection(false);\r\n            setIsSizeSection(false);\r\n            setisBorderSection(true);\r\n            setIsHoverSection(false);\r\n            setIsColorSection(false);\r\n          }}\r\n        >\r\n          Border\r\n        </MenuButton>\r\n        <MenuButton style={{backgroundColor: isHoverSection ? '#ededed' : '#d3d3d3'}}\r\n          onClick={() => {\r\n            setIsTextSection(false);\r\n            setIsSizeSection(false);\r\n            setisBorderSection(false);\r\n            setIsHoverSection(true);\r\n            setIsColorSection(false);\r\n          }}\r\n        >\r\n          Hover\r\n        </MenuButton>\r\n      </MenuNavbar>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.a`\r\n  background-color: ${props => props.bgColor};\r\n  display: flex;\r\n  justify-content: ${props => props.textAlign};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  cursor: pointer;\r\n  width: ${props => props.btnWidth}px;\r\n  height: ${props => props.btnHeight}px;\r\n  border: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.borderColor};\r\n  border-radius: ${props => props.borderRadius}px;\r\n  font-size: ${props => props.btnFontSize}px;\r\n  color: ${props => props.fontColor};\r\n  text-decoration: none;\r\n  padding: ${props => props.btnPadding}px;\r\n  margin: ${props => props.btnMargin}px;\r\n  font-weight: ${props => props.fontWeigth};\r\n  transition: all ${prop=>prop.transitionTime}ms ease-in-out;\r\n\r\n  &:hover {\r\n    color: ${props => props.hoverColor};\r\n    background-color: ${props => props.hoverBgColor};\r\n    border: ${props => props.hoverBorderSize}px ${props => props.hoverBorderStyle} ${props => props.hoverBorderColor};\r\n  }\r\n`;\r\n\r\nexport default function Button(props) {\r\n\r\n  const {\r\n    text,\r\n    btnFontSize,\r\n    btnHeight,\r\n    btnWidth,\r\n    bgColor,\r\n    borderSize,\r\n    borderStyle,\r\n    borderColor,\r\n    fontColor,\r\n    borderRadius,\r\n    hoverColor,\r\n    hoverBgColor,\r\n    hoverBorderColor,\r\n    url,\r\n    btnMargin,\r\n    btnPadding,\r\n    textAlign,\r\n    transitionTime,\r\n    isURL,\r\n    isHover,\r\n    isBorder,\r\n    hoverBorderSize,\r\n    hoverBorderStyle\r\n  } = props;\r\n  return (\r\n    <StyledButton\r\n      btnFontSize={btnFontSize}\r\n      textAlign={textAlign}\r\n      href={isURL ? 'https://'+url : url} \r\n      \r\n      btnMargin={btnMargin}\r\n      btnPadding={btnPadding}\r\n      btnWidth={btnWidth}\r\n      btnHeight={btnHeight}\r\n\r\n      bgColor={bgColor}\r\n      fontColor={fontColor}\r\n\r\n      borderSize={isBorder ? borderSize : '0'}\r\n      borderStyle={isBorder ? borderStyle : 'solid'}\r\n      borderColor={isBorder ? borderColor : bgColor}\r\n      borderRadius={borderRadius}\r\n\r\n      hoverColor={isHover ? hoverColor : ''}\r\n      hoverBgColor={isHover ? hoverBgColor : ''}\r\n      hoverBorderColor={isBorder ? hoverBorderColor : ''}\r\n      transitionTime={isHover ? transitionTime : '0'}\r\n      hoverBorderSize={isBorder ? (isHover ? hoverBorderSize : '') : ('')}\r\n      hoverBorderStyle={isBorder ? (isHover ? hoverBorderStyle : '') : ('')}\r\n\r\n      onClick={isURL ?  '' : (e)=>{e.preventDefault()}}\r\n      target=\"_blank\"\r\n    >\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst StyledClipboard = styled.div`\r\n  height: 200px;\r\n  width: 800px;\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ClipboardNav = styled.div`\r\ndisplay: flex;\r\nposition: relative;\r\ntop: 11px;\r\nright: 300px;\r\n`\r\n\r\nconst ClipboardBtn = styled.div`\r\nwidth: 60px;\r\npadding: 5px 0px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nborder-left: 1px solid lightgray;\r\nborder-top: 1px solid lightgray;\r\nborder-right: 1px solid lightgray;\r\ncursor: pointer;\r\nmargin-right: 10px;\r\n\r\n`\r\n\r\n\r\nconst ClipboardMsg = styled.div`\r\nbackground-color: orange;\r\nmargin: 5px;\r\npadding: 5px;\r\nfont-size: 12px;\r\nz-index: 5;\r\n`\r\n\r\nconst ClipboardSection = styled.div`\r\n  margin: 10px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 1px solid lightgray;\r\n  padding: 20px;\r\n  background-color: #ededed;\r\n  h4 {\r\n    margin: 1px;\r\n  }\r\n`;\r\n\r\nconst CopyButton = styled.div`\r\n  height: 26px;\r\n  width: 90%;\r\n  background-color: #d3d3d3;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background-color: orange;\r\n  }\r\n`;\r\n\r\nconst ClipboardText = styled.div`\r\n  margin: 5px;\r\n  text-align: center;\r\n  background-color: white;\r\n  border: 1px solid #d3d3d3;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport default function Clipboard(props) {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n  const [isHTML, setIsHTML] = useState(true)\r\n  const [isCSS, setIsCSS] = useState(false)\r\n\r\n  const onCopyText = () => {\r\n    setIsCopied(true);\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const {\r\n    text,\r\n    btnFontSize,\r\n    btnHeight,\r\n    btnWidth,\r\n    bgColor,\r\n    borderSize,\r\n    borderStyle,\r\n    borderColor,\r\n    fontColor,\r\n    borderRadius,\r\n    hoverColor,\r\n    hoverBgColor,\r\n    hoverBorderColor,\r\n    url,\r\n    btnMargin,\r\n    btnPadding,\r\n    textAlign,\r\n    transitionTime,\r\n    isURL,\r\n    isHover,\r\n    isBorder,\r\n    hoverBorderSize,\r\n    hoverBorderStyle\r\n  } = props;\r\n  const clipboardTextHTMLPlain = `<a class=\"btn\" ${\r\n    isURL ? `href='https://${url}'` : \"\"\r\n  }>${text}</a>`;\r\n  const clipboardButtonCSS = `\r\n    .btn {\r\n        display: flex;\r\n        justify-content: ${textAlign};\r\n        align-items: center;\r\n        font-size: ${btnFontSize}px;\r\n        height: ${btnHeight}px;\r\n        width: ${btnWidth}px;\r\n        background-color: ${bgColor};\r\n        ${\r\n          isBorder\r\n            ? `border: ${borderSize}px ${borderStyle} ${borderColor};`\r\n            : \"\"\r\n        }\r\n        \r\n        color: ${fontColor};\r\n        border-radius: ${borderRadius}px;\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        padding: ${btnPadding}px;\r\n        margin: ${btnMargin}px;\r\n        transition: all ${transitionTime}ms ease-in-out;\r\n    }\r\n    `;\r\n  const clipboardHoverCss = `\r\n    .btn:hover {\r\n    color: ${hoverColor};\r\n    background-color:${hoverBgColor};\r\n    ${\r\n      isBorder ? `border: ${hoverBorderSize}px ${hoverBorderStyle} ${hoverBorderColor};` : \"\"\r\n    }\r\n    \r\n  }\r\n  `;\r\n\r\n  const clipboardAll = clipboardButtonCSS + clipboardHoverCss;\r\n\r\n  return (\r\n    <>\r\n    <ClipboardNav>\r\n      <ClipboardBtn onClick={()=>{\r\n        setIsHTML(true)\r\n        setIsCSS(false)\r\n        }} style={{backgroundColor: isHTML ? '#ededed' : '#f6f6f6'}}>\r\n        HTML\r\n      </ClipboardBtn>\r\n      <ClipboardBtn onClick={()=>{\r\n        setIsHTML(false)\r\n        setIsCSS(true)\r\n        }} style={{backgroundColor: isCSS ? '#ededed' : '#f6f6f6'}}>\r\n        CSS\r\n      </ClipboardBtn>\r\n    </ClipboardNav>\r\n    <StyledClipboard>\r\n    {isHTML && (\r\n          <ClipboardSection>\r\n        <h4>\r\n          Copy code below and paste it into body section in your html file\r\n        </h4>\r\n        <ClipboardText>{clipboardTextHTMLPlain}</ClipboardText>\r\n        <CopyToClipboard onCopy={onCopyText} text={clipboardTextHTMLPlain}>\r\n          <CopyButton>Copy HTML</CopyButton>\r\n        </CopyToClipboard>\r\n      </ClipboardSection>\r\n        )}\r\n        {isCSS && (\r\n          <ClipboardSection>\r\n        <h4>Copy code below and paste it into your css file</h4>\r\n        <ClipboardText>\r\n          {clipboardButtonCSS}\r\n          {isHover && clipboardHoverCss}\r\n        </ClipboardText>\r\n        <CopyToClipboard onCopy={onCopyText} text={isHover ? clipboardAll : clipboardButtonCSS}>\r\n          <CopyButton>Copy CSS</CopyButton>\r\n        </CopyToClipboard>\r\n      </ClipboardSection>\r\n\r\n        )}\r\n            {isCopied && \r\n    <ClipboardMsg>Copied!</ClipboardMsg>}\r\n\r\n    </StyledClipboard>\r\n    \r\n\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TextSection(props) {\r\n    const {text, setText, btnFontSize, setBtnFontSize, textAlign, setTextAlign, isURL, setIsURL, url, setUrl} = props\r\n    return (\r\n        <>\r\n        <label for=\"text\">Text: </label>\r\n            <input\r\n              id=\"text\"\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              maxLength=\"50\"\r\n              onChange={(e)=>setText(e.target.value)}\r\n              value={text}\r\n            />\r\n            <label for=\"fontSize\">Font size: </label>\r\n            <input\r\n              id=\"fontSize\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"64\"\r\n              onChange={(e)=>setBtnFontSize(e.target.value)}\r\n              value={btnFontSize}\r\n            />\r\n            <label for=\"textAlign\">Text justify: </label>\r\n            <select\r\n              id=\"textAlign\"\r\n              value={textAlign}\r\n              onChange={(e)=>setTextAlign(e.target.value)}\r\n            >\r\n              <option value=\"flex-start\">left</option>\r\n              <option value=\"center\">center</option>\r\n              <option value=\"flex-end\">right</option>\r\n            </select>\r\n            <form>\r\n              <label for=\"isURL\">Add URL</label>\r\n              <input\r\n                id=\"isURL\"\r\n                type=\"checkbox\"\r\n                checked={isURL}\r\n                onChange={()=>{setIsURL(!isURL)}}\r\n              />\r\n            </form>\r\n            {isURL && (\r\n              <>\r\n                <label for=\"url\">Url: </label>\r\n                <input\r\n                  id=\"url\"\r\n                  type=\"text\"\r\n                  placeholder=\"https://\"\r\n                  autoComplete=\"off\"\r\n                  maxLength=\"100\"\r\n                  onChange={(e)=> setUrl(e.target.value) }\r\n                  value={url}\r\n                />\r\n              </>\r\n            )}\r\n            </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function SizeSection(props) {\r\n    const {btnWidth, btnHeight, btnPadding, btnMargin, borderRadius, setWidthChange, setHeightChange, setBtnPadding, setBtnMargin, setBorderRadius} = props\r\n    return (\r\n        <>\r\n            <label for=\"width\">Width: </label>\r\n            <input\r\n              id=\"width\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"1200\"\r\n              onChange={(e)=>setWidthChange(e.target.value)}\r\n              value={btnWidth}\r\n            />\r\n            <label for=\"height\">Height: </label>\r\n            <input\r\n              id=\"height\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"450\"\r\n              onChange={(e)=>setHeightChange(e.target.value)}\r\n              value={btnHeight}\r\n            />\r\n            <label for=\"padding\">Padding: </label>\r\n            <input\r\n              id=\"padding\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"500\"\r\n              onChange={(e) => {\r\n                setBtnPadding(e.target.value);\r\n              }}\r\n              value={btnPadding}\r\n            />\r\n            <label for=\"margin\">Margin: </label>\r\n            <input\r\n              id=\"margin\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"500\"\r\n              onChange={(e) => {\r\n                setBtnMargin(e.target.value);\r\n              }}\r\n              value={btnMargin}\r\n            />\r\n            <label for=\"border-radius\">Border radius: </label>\r\n            <input\r\n              id=\"border-radius\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"180\"\r\n              onChange={(e) => {\r\n                setBorderRadius(e.target.value);\r\n              }}\r\n              value={borderRadius}\r\n            />\r\n            </>\r\n    )\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const PickerButton = styled.div`\r\n  background-color: #d3d3d3;\r\n  width: 310px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background-color: orange;\r\n  }\r\n`;\r\nexport const PickerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 15px;\r\n`;","import React from 'react'\r\nimport { PickerButton, PickerContainer } from '../colorPicker'\r\nimport { ChromePicker } from 'react-color'\r\n\r\nexport default function ColorSection(props) {\r\n    const {showFontColorPicker, setShowFontColorPicker, setShowBgPicker, showBgPicker, setFontColor, setBgColor, bgColor, fontColor} = props\r\n    return (\r\n        <>\r\n        <PickerButton\r\n              onClick={() => {\r\n                setShowFontColorPicker(!showFontColorPicker)\r\n                setShowBgPicker(false);\r\n              }}\r\n            >\r\n              Font color\r\n            </PickerButton>\r\n            {showFontColorPicker && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={fontColor}\r\n                  onChange={(updatedColor) => setFontColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowBgPicker(!showBgPicker);\r\n                setShowFontColorPicker(false)\r\n              }}\r\n            >\r\n              Background color\r\n            </PickerButton>\r\n            {showBgPicker && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={bgColor}\r\n                  onChange={(updatedColor) => setBgColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { PickerButton, PickerContainer } from '../colorPicker'\r\nimport { ChromePicker } from 'react-color'\r\n\r\nexport default function BorderSection(props) {\r\n    const {isBorder, setIsBorder, borderSize, setBorderSize, borderStyle, setBorderStyle, setShowBorderPicker, showBorderPicker, borderColor, setBorderColor } = props\r\n    return (\r\n        <>\r\n            <form>\r\n              <label for=\"isBorder\">Enable border</label>\r\n              <input\r\n                id=\"isBorder\"\r\n                type=\"checkbox\"\r\n                checked={isBorder}\r\n                onChange={()=>setIsBorder(!isBorder)}\r\n              />\r\n            </form>\r\n            {isBorder && (\r\n              <>\r\n                <label for=\"border-size\">Border size: </label>\r\n                <input\r\n                  id=\"border-size\"\r\n                  type=\"number\"\r\n                  placeholder=\"\"\r\n                  autoComplete=\"off\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  onChange={(e)=>setBorderSize(e.target.value)}\r\n                  value={borderSize}\r\n                />\r\n                <label for=\"borderStyle\">Border style: </label>\r\n                <select\r\n                  id=\"borderStyle\"\r\n                  value={borderStyle}\r\n                  onChange={(e) => setBorderStyle(e.target.value)}\r\n                >\r\n                  <option value=\"solid\">solid</option>\r\n                  <option value=\"dotted\">dotted</option>\r\n                  <option value=\"dashed\">dashed</option>\r\n                  <option value=\"double\">double</option>\r\n                </select>\r\n                <PickerButton\r\n                  onClick={() => {\r\n                    setShowBorderPicker(!showBorderPicker);\r\n                  }}\r\n                >\r\n                  Border color\r\n                </PickerButton>\r\n                {showBorderPicker && (\r\n                  <PickerContainer>\r\n                    <ChromePicker\r\n                      color={borderColor}\r\n                      onChange={(updatedColor) =>\r\n                        setBorderColor(updatedColor.hex)\r\n                      }\r\n                    ></ChromePicker>\r\n                  </PickerContainer>\r\n                )}\r\n              </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { PickerButton, PickerContainer } from \"../colorPicker\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nexport default function HoverSection(props) {\r\n  const {\r\n    isHover,\r\n    setIsHover,\r\n    setShowHoverColor,\r\n    showHoverColor,\r\n    setHoverBgColor,\r\n    hoverBgColor,\r\n    setHoverBorderColor,\r\n    hoverBorderColor,\r\n    setHoverBorderSize,\r\n    hoverBorderSize,\r\n    setHoverBorderStyle,\r\n    hoverBorderStyle,\r\n    hoverColor,\r\n    setHoverColor,\r\n    transitionTime,\r\n    setTransitionTime,\r\n    isBorder,\r\n    setShowHoverBgColor,\r\n    showHoverBgColor,\r\n    setShowHoverBorderColor,\r\n    showHoverBorderColor,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <form>\r\n        <label for=\"isHover\">Enable hover effect</label>\r\n        <input\r\n          id=\"isHover\"\r\n          type=\"checkbox\"\r\n          checked={isHover}\r\n          onChange={() => setIsHover(!isHover)}\r\n        />\r\n      </form>\r\n      {isHover && (\r\n        <>\r\n          <PickerButton\r\n            onClick={() => {\r\n              setShowHoverColor(!showHoverColor);\r\n              setShowHoverBgColor(false);\r\n              setShowHoverBorderColor(false);\r\n            }}\r\n          >\r\n            Hover font color\r\n          </PickerButton>\r\n          {showHoverColor && (\r\n            <PickerContainer>\r\n              <ChromePicker\r\n                color={hoverColor}\r\n                onChange={(updatedColor) => setHoverColor(updatedColor.hex)}\r\n              ></ChromePicker>\r\n            </PickerContainer>\r\n          )}\r\n          <PickerButton\r\n            onClick={() => {\r\n              setShowHoverBgColor(!showHoverBgColor);\r\n              setShowHoverColor(false);\r\n              setShowHoverBorderColor(false);\r\n            }}\r\n          >\r\n            Hover background color\r\n          </PickerButton>\r\n          {showHoverBgColor && (\r\n            <PickerContainer>\r\n              <ChromePicker\r\n                color={hoverBgColor}\r\n                onChange={(updatedColor) => setHoverBgColor(updatedColor.hex)}\r\n              ></ChromePicker>\r\n            </PickerContainer>\r\n          )}\r\n          {isBorder && (\r\n            <>\r\n              <PickerButton\r\n                onClick={() => {\r\n                  setShowHoverBorderColor(!showHoverBorderColor);\r\n                  setShowHoverBgColor(false);\r\n                  setShowHoverColor(false);\r\n                }}\r\n              >\r\n                Hover border color\r\n              </PickerButton>\r\n              {showHoverBorderColor && (\r\n                <PickerContainer>\r\n                  <ChromePicker\r\n                    color={hoverBorderColor}\r\n                    onChange={(updatedColor) =>\r\n                      setHoverBorderColor(updatedColor.hex)\r\n                    }\r\n                  ></ChromePicker>\r\n                </PickerContainer>\r\n              )}\r\n              <label for=\"hoverBorderSize\">Hover border size: </label>\r\n              <input\r\n                id=\"hoverBorderSize\"\r\n                type=\"number\"\r\n                placeholder=\"\"\r\n                autoComplete=\"off\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                onChange={(e) => setHoverBorderSize(e.target.value)}\r\n                value={hoverBorderSize}\r\n              />\r\n              <label for=\"hoverBorderStyle\">Hover border style: </label>\r\n              <select\r\n                id=\"hoverBorderStyle\"\r\n                value={hoverBorderStyle}\r\n                onChange={(e) => setHoverBorderStyle(e.target.value)}\r\n              >\r\n                <option value=\"solid\">solid</option>\r\n                <option value=\"dotted\">dotted</option>\r\n                <option value=\"dashed\">dashed</option>\r\n                <option value=\"double\">double</option>\r\n              </select>\r\n            </>\r\n          )}\r\n\r\n          <label for=\"transitionTime\">Transition time: </label>\r\n          <input\r\n            id=\"transitionTime\"\r\n            type=\"number\"\r\n            placeholder=\"in miliseconds\"\r\n            autoComplete=\"off\"\r\n            min=\"0\"\r\n            max=\"5000\"\r\n            onChange={(e) => setTransitionTime(e.target.value)}\r\n            value={transitionTime}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Menu from \"./components/menu/Menu\";\nimport Button from \"./Button\";\nimport Clipboard from \"./Clipboard\";\nimport TextSection from \"./components/sidebar/Text\";\nimport SizeSection from \"./components/sidebar/Size\";\nimport ColorSection from \"./components/sidebar/Color\";\nimport BorderSection from \"./components/sidebar/Border\";\nimport HoverSection from \"./components/sidebar/Hover\";\n\nconst StyledMain = styled.div`\ndisplay: flex;\nwidth: 100%;\nmin-height: 100vh;\n`\n\nconst StyledApp = styled.div`\nwidth: 100%;\n`;\n\nconst StyledMenu = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  \n  input {\n    width: 300px;\n    outline: none;\n    border: none;\n    margin: 2px;\n  }\n\n  input[type=\"checkbox\"] {\n    margin: 5px;\n    width: 20px;\n  }\n\n  select {\n    width: 300px;\n    margin: 2px;\n    border: none;\n  }\n`;\n\nconst MenuSidebar = styled.div`\n  position: relative;\n  padding: 25px;\n  top: 12px;\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n  background-color: #ededed;\n  min-height: fit-content;\n  width: 300px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nconst AppTitle = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 5px;\n  width: 100%;\n  z-index: 1;\n  font-size: 16px;\n  font-weight: 700;\n  color: ghostwhite;\n  text-align: right;\n  background-color: #d3d3d3;\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 99.99%;\n  min-height: 600px;\n  border-left: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n  background-color: #fbfbfb;\n`;\n\nfunction App() {\n  const [isURL, setIsURL] = useState(false);\n  const [isHover, setIsHover] = useState(false);\n  const [isBorder, setIsBorder] = useState(false);\n\n  const [text, setText] = useState(\"sample button\");\n  const [btnFontSize, setBtnFontSize] = useState(\"18\");\n  const [fontColor, setFontColor] = useState(\"black\");\n  const [textAlign, setTextAlign] = useState(\"center\");\n  const [url, setUrl] = useState(\"\");\n\n  const [btnWidth, setWidthChange] = useState(\"200\");\n  const [btnHeight, setHeightChange] = useState(\"100\");\n  const [btnPadding, setBtnPadding] = useState(\"0\");\n  const [btnMargin, setBtnMargin] = useState(\"0\");\n  const [bgColor, setBgColor] = useState(\"#BBB\");\n\n  const [borderSize, setBorderSize] = useState(\"0\");\n  const [borderStyle, setBorderStyle] = useState(\"solid\");\n  const [borderColor, setBorderColor] = useState(bgColor);\n  const [borderRadius, setBorderRadius] = useState(\"0\");\n\n  const [hoverColor, setHoverColor] = useState(fontColor);\n  const [hoverBgColor, setHoverBgColor] = useState(bgColor);\n  const [hoverBorderColor, setHoverBorderColor] = useState(borderColor);\n  const [hoverBorderSize, setHoverBorderSize] = useState(borderSize);\n  const [hoverBorderStyle, setHoverBorderStyle] = useState(borderStyle);\n\n  const [transitionTime, setTransitionTime] = useState(\"0\");\n\n  const [showFontColorPicker, setShowFontColorPicker] = useState(false);\n  const [showBgPicker, setShowBgPicker] = useState(false);\n  const [showBorderPicker, setShowBorderPicker] = useState(false);\n\n  const [showHoverColor, setShowHoverColor] = useState(false);\n  const [showHoverBgColor, setShowHoverBgColor] = useState(false);\n  const [showHoverBorderColor, setShowHoverBorderColor] = useState(false);\n\n  const [isTextSection, setIsTextSection] = useState(true);\n  const [isSizeSection, setIsSizeSection] = useState(false);\n  const [isBorderSection, setisBorderSection] = useState(false);\n  const [isHoverSection, setIsHoverSection] = useState(false);\n  const [isColorSection, setIsColorSection] = useState(false);\n\n  return (\n    <>\n      <AppTitle>Create your own button!</AppTitle>\n      <StyledMain>\n      <StyledMenu>\n      <Menu\n          isTextSection={isTextSection}\n          isSizeSection={isSizeSection}\n          isColorSection={isColorSection}\n          isBorderSection={isBorderSection}\n          isHoverSection={isHoverSection}\n          setIsTextSection={setIsTextSection}\n          setIsSizeSection={setIsSizeSection}\n          setIsColorSection={setIsColorSection}\n          setisBorderSection={setisBorderSection}\n          setIsHoverSection={setIsHoverSection}\n        />\n        {isTextSection && (\n          <MenuSidebar>\n            <TextSection\n              text={text}\n              btnFontSize={btnFontSize}\n              url={url}\n              isURL={isURL}\n              textAlign={textAlign}\n              setIsURL={setIsURL}\n              setText={setText}\n              setBtnFontSize={setBtnFontSize}\n              setUrl={setUrl}\n              setTextAlign={setTextAlign}\n            />\n          </MenuSidebar>\n        )}\n        {isSizeSection && (\n          <MenuSidebar>\n            <SizeSection\n              btnHeight={btnHeight}\n              btnWidth={btnWidth}\n              btnMargin={btnMargin}\n              btnPadding={btnPadding}\n              borderRadius={borderRadius}\n              setHeightChange={setHeightChange}\n              setWidthChange={setWidthChange}\n              setBtnMargin={setBtnMargin}\n              setBtnPadding={setBtnPadding}\n              setBorderRadius={setBorderRadius}\n            />\n          </MenuSidebar>\n        )}\n        {isColorSection && (\n          <MenuSidebar>\n            <ColorSection\n              fontColor={fontColor}\n              bgColor={bgColor}\n              showBgPicker={showBgPicker}\n              showFontColorPicker={showFontColorPicker}\n              setFontColor={setFontColor}\n              setBgColor={setBgColor}\n              setShowBgPicker={setShowBgPicker}\n              setShowFontColorPicker={setShowFontColorPicker}\n            />\n          </MenuSidebar>\n        )}\n        {isBorderSection && (\n          <MenuSidebar>\n            <BorderSection\n              isBorder={isBorder}\n              borderSize={borderSize}\n              borderStyle={borderStyle}\n              borderColor={borderColor}\n              showBorderPicker={showBorderPicker}\n              setIsBorder={setIsBorder}\n              setBorderSize={setBorderSize}\n              setBorderStyle={setBorderStyle}\n              setBorderColor={setBorderColor}\n              setShowBorderPicker={setShowBorderPicker}\n            />\n          </MenuSidebar>\n        )}\n        {isHoverSection && (\n          <MenuSidebar>\n            <HoverSection\n              hoverColor={hoverColor}\n              setHoverColor={setHoverColor}\n              hoverBgColor={hoverBgColor}\n              setHoverBgColor={setHoverBgColor}\n              hoverBorderColor={hoverBorderColor}\n              setHoverBorderColor={setHoverBorderColor}\n              transitionTime={transitionTime}\n              setTransitionTime={setTransitionTime}\n              isHover={isHover}\n              setIsHover={setIsHover}\n              isBorder={isBorder}\n              setIsBorder={setIsBorder}\n              hoverBorderSize={hoverBorderSize}\n              hoverBorderStyle={hoverBorderStyle}\n              setHoverBorderSize={setHoverBorderSize}\n              setHoverBorderStyle={setHoverBorderStyle}\n              setShowHoverBorderColor={setShowHoverBorderColor}\n              showHoverColor={showHoverColor}\n              setShowHoverBgColor={setShowHoverBgColor}\n              showHoverBgColor={showHoverBgColor}\n              setShowHoverColor={setShowHoverColor}\n              showHoverBorderColor={showHoverBorderColor}\n            />\n          </MenuSidebar>\n        )}\n      </StyledMenu>\n      <StyledApp>\n\n        <AppContainer>\n          <ButtonContainer>\n            <Button\n              text={text}\n              btnFontSize={btnFontSize}\n              btnHeight={btnHeight}\n              btnWidth={btnWidth}\n              bgColor={bgColor}\n              borderSize={borderSize}\n              borderStyle={borderStyle}\n              borderColor={borderColor}\n              fontColor={fontColor}\n              borderRadius={borderRadius}\n              hoverColor={hoverColor}\n              hoverBgColor={hoverBgColor}\n              hoverBorderColor={hoverBorderColor}\n              url={url}\n              btnMargin={btnMargin}\n              btnPadding={btnPadding}\n              textAlign={textAlign}\n              transitionTime={transitionTime}\n              isURL={isURL}\n              isHover={isHover}\n              isBorder={isBorder}\n              hoverBorderSize={hoverBorderSize}\n              hoverBorderStyle={hoverBorderStyle}\n            />\n          </ButtonContainer>\n          <Clipboard\n            text={text}\n            btnFontSize={btnFontSize}\n            btnHeight={btnHeight}\n            btnWidth={btnWidth}\n            bgColor={bgColor}\n            borderSize={borderSize}\n            borderStyle={borderStyle}\n            borderColor={borderColor}\n            fontColor={fontColor}\n            borderRadius={borderRadius}\n            hoverColor={hoverColor}\n            hoverBgColor={hoverBgColor}\n            hoverBorderColor={hoverBorderColor}\n            url={url}\n            btnMargin={btnMargin}\n            btnPadding={btnPadding}\n            textAlign={textAlign}\n            transitionTime={transitionTime}\n            isURL={isURL}\n            isHover={isHover}\n            isBorder={isBorder}\n            hoverBorderSize={hoverBorderSize}\n            hoverBorderStyle={hoverBorderStyle}\n          />\n        </AppContainer>\n      </StyledApp>\n      </StyledMain>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}