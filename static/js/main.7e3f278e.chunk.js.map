{"version":3,"sources":["Menu.js","Button.js","Clipboard.js","App.js","index.js"],"names":["StyledMenu","styled","div","MenuNavbar","MenuButton","PickerButton","MenuSidebar","Menu","props","text","onTextChange","btnFontSize","onFontSizeChange","btnHeight","btnWidth","onHeightChange","onWidthChange","bgColor","setBgColor","borderSize","onBorderSizeChange","borderStyle","onBorderStyleChange","borderColor","setBorderColor","fontColor","setFontColor","borderRadius","setBorderRadius","hoverColor","setHoverColor","hoverBgColor","setHoverBgColor","hoverBorderColor","setHoverBorderColor","useState","showBgPicker","setShowBgPicker","showBorderPicker","setShowBorderPicker","showFontColorPicker","setShowFontColorPicker","showHoverColor","setShowHoverColor","showHoverBgColor","setShowHoverBgColor","showHoverBorderColor","setShowHoverBorderColor","isText","setIsText","isSize","setIsSize","isBorder","setIsBorder","isHover","setIsHover","onClick","for","id","type","placeholder","autoComplete","maxLength","onChange","value","min","max","color","updatedColor","hex","e","target","StyledButton","Button","StyledClipboard","ClipboardSection","CopyButton","ClipboardText","Clipboard","ClipBoardTextHTMLPlain","clipboardTextCSS","StyledApp","AppContainer","ButtonContainer","App","setText","setWidthChange","setHeightChange","setBtnFontSize","setBorderSize","setBorderStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e3f278e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {ChromePicker } from 'react-color'\r\n\r\nconst StyledMenu = styled.div`\r\nposition: relative;\r\npadding: 20px;\r\ntop: 0;\r\nleft: 0;\r\nmin-width: 320px;\r\nheight: 100%;\r\nbackground-color: aliceblue;\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\ninput {\r\n    width: 300px;\r\n}\r\n\r\nselect {\r\n    width: 300px;\r\n}\r\n`\r\n\r\nconst MenuNavbar = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\npadding: 5px;\r\nmargin: 5px;\r\nbackground-color: lightblue;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\nconst PickerButton = styled.div`\r\nbackground-color: lightblue;\r\nwidth: 310px;\r\nmargin-top: 10px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center ;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\nconst MenuSidebar = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`\r\n\r\nexport default function Menu(props) {\r\n    const {text, onTextChange, btnFontSize, onFontSizeChange, btnHeight, btnWidth, onHeightChange, onWidthChange, bgColor, setBgColor, borderSize, onBorderSizeChange, borderStyle, onBorderStyleChange, borderColor, setBorderColor, fontColor, setFontColor, borderRadius, setBorderRadius, hoverColor, setHoverColor, hoverBgColor, setHoverBgColor, hoverBorderColor, setHoverBorderColor} = props\r\n    const [showBgPicker, setShowBgPicker] = useState(false)\r\n    const [showBorderPicker, setShowBorderPicker] = useState(false)\r\n    const [showFontColorPicker, setShowFontColorPicker] = useState(false)\r\n    const [showHoverColor, setShowHoverColor] = useState(false)\r\n    const [showHoverBgColor, setShowHoverBgColor] = useState(false)\r\n    const [showHoverBorderColor, setShowHoverBorderColor] = useState(false)\r\n\r\n    const [isText, setIsText] = useState(true)\r\n    const [isSize, setIsSize] = useState(false)\r\n    const [isBorder, setIsBorder] = useState(false)\r\n    const [isHover, setIsHover] = useState(false)\r\n\r\n    return (\r\n        <StyledMenu>\r\n            <MenuNavbar>\r\n                <MenuButton onClick={()=>{\r\n                    setIsText(true)\r\n                    setIsSize(false)\r\n                    setIsBorder(false)\r\n                    setIsHover(false)\r\n                }}>Text</MenuButton>\r\n                <MenuButton onClick={()=>{\r\n                    setIsText(false)\r\n                    setIsSize(true)\r\n                    setIsBorder(false)\r\n                    setIsHover(false)\r\n                }}>Size</MenuButton>\r\n                <MenuButton onClick={()=>{\r\n                    setIsText(false)\r\n                    setIsSize(false)\r\n                    setIsBorder(true)\r\n                    setIsHover(false)\r\n                }}>Border</MenuButton>\r\n                <MenuButton onClick={()=>{\r\n                    setIsText(false)\r\n                    setIsSize(false)\r\n                    setIsBorder(false)\r\n                    setIsHover(true)\r\n                }}>Hover</MenuButton>\r\n            </MenuNavbar>\r\n            {isText &&\r\n            <MenuSidebar>\r\n                <label for=\"text\">Text: </label>\r\n                <input id=\"text\" type=\"text\" placeholder=\"\" autoComplete=\"off\" maxLength=\"50\" onChange={onTextChange} value={text} />\r\n                <label for=\"fontSize\">Font size: </label>\r\n                <input id=\"fontSize\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"64\" onChange={onFontSizeChange} value={btnFontSize} />\r\n                <PickerButton onClick={()=>{setShowFontColorPicker(!showFontColorPicker)}}>Font color</PickerButton>\r\n                {showFontColorPicker &&\r\n                <ChromePicker color={fontColor} onChange={updatedColor => setFontColor(updatedColor.hex)}>\r\n                </ChromePicker>}\r\n            </MenuSidebar>}\r\n            {isSize && \r\n            <MenuSidebar>\r\n            <label for=\"width\">Width: </label>\r\n            <input id=\"width\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"1500\" onChange={onWidthChange} value={btnWidth} />\r\n            <label for=\"height\">Height: </label>\r\n            <input id=\"height\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"500\" onChange={onHeightChange} value={btnHeight} />\r\n            \r\n            <PickerButton onClick={()=>{setShowBgPicker(!showBgPicker)}}>Background color</PickerButton>\r\n            {showBgPicker &&\r\n            <ChromePicker color={bgColor} onChange={updatedColor => setBgColor(updatedColor.hex)}>\r\n            </ChromePicker>\r\n            }    \r\n            </MenuSidebar>}\r\n            {isBorder && \r\n            <MenuSidebar>\r\n            <label for=\"border-size\">Border size: </label>\r\n            <input id=\"border-size\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"100\" onChange={onBorderSizeChange} value={borderSize} />\r\n            <label for=\"borderStyle\">Border style: </label>\r\n            <select id=\"borderStyle\" value={borderStyle} onChange={onBorderStyleChange}>\r\n                <option value=\"solid\">solid</option>\r\n                <option value=\"dotted\">dotted</option>\r\n                <option value=\"dashed\">dashed</option>\r\n                <option value=\"double\">double</option>\r\n            </select>\r\n            <PickerButton onClick={()=>{setShowBorderPicker(!showBorderPicker)}}>Border color</PickerButton>\r\n            {showBorderPicker &&\r\n            <ChromePicker color={borderColor} onChange={updatedColor => setBorderColor(updatedColor.hex)}>\r\n            </ChromePicker>\r\n            }\r\n            <label for=\"border-radius\">Border radius: </label>\r\n            <input id=\"border-radius\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"180\" onChange={(e)=>{setBorderRadius(e.target.value)}} value={borderRadius} />    \r\n            </MenuSidebar>}\r\n            {isHover && \r\n            <MenuSidebar>\r\n            <PickerButton onClick={()=>{setShowHoverColor(!showHoverColor)}}>Hover font color</PickerButton>\r\n            {showHoverColor &&\r\n            <ChromePicker color={hoverColor} onChange={updatedColor => setHoverColor(updatedColor.hex)}>\r\n            </ChromePicker>}\r\n            <PickerButton onClick={()=>{setShowHoverBgColor(!showHoverBgColor)}}>Hover background color</PickerButton>\r\n            {showHoverBgColor &&\r\n            <ChromePicker color={hoverBgColor} onChange={updatedColor => setHoverBgColor(updatedColor.hex)}>\r\n            </ChromePicker>}\r\n            <PickerButton onClick={()=>{setShowHoverBorderColor(!showHoverBorderColor)}}>Hover border color</PickerButton>\r\n            {showHoverBorderColor &&\r\n            <ChromePicker color={hoverBorderColor} onChange={updatedColor => setHoverBorderColor(updatedColor.hex)}>\r\n            </ChromePicker>}\r\n            </MenuSidebar>}\r\n            \r\n        </StyledMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.div`\r\nbackground-color: ${props => props.bgColor};\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\ncursor: pointer;\r\nwidth: ${props => props.btnWidth}px;\r\nheight: ${props => props.btnHeight}px;\r\nborder: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.borderColor};\r\nborder-radius: ${props => props.borderRadius}px;\r\nfont-size: ${props => props.btnFontSize}px;\r\ncolor: ${props => props.fontColor};\r\n\r\n&:hover {\r\ncolor: ${props => props.hoverColor};\r\nbackground-color: ${props => props.hoverBgColor};\r\nborder: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.hoverBorderColor};\r\n}\r\n`\r\n\r\nexport default function Button(props) {\r\n    const {\r\n        text, btnFontSize, btnHeight, btnWidth, bgColor, borderSize, borderStyle, borderColor, fontColor, borderRadius, hoverColor, hoverBgColor, hoverBorderColor\r\n    } = props\r\n    return (\r\n        <StyledButton btnFontSize={btnFontSize} fontColor={fontColor} btnWidth={btnWidth} btnHeight={btnHeight} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor} borderRadius={borderRadius} hoverColor={hoverColor} hoverBgColor={hoverBgColor} hoverBorderColor={hoverBorderColor}>\r\n            {text}\r\n            \r\n        </StyledButton>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst StyledClipboard = styled.div`\r\nheight: 300px;\r\nwidth: 800px;\r\nbackground-color: aliceblue;\r\nborder: 1px solid lightblue;\r\ncolor: black;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\n\r\nconst ClipboardSection = styled.div`\r\nmargin: 10px;\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\nh4 {\r\n    margin: 1px;\r\n}\r\n`\r\n\r\nconst CopyButton = styled.div`\r\nheight: 26px;\r\nwidth: 90%;\r\nbackground-color: lightblue;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin: 5px;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\nconst ClipboardText = styled.div`\r\npadding: 5px;\r\ntext-align: center;\r\n\r\n`\r\n\r\nexport default function Clipboard(props) {\r\n    const {text, btnFontSize, btnHeight, btnWidth, bgColor, borderSize, borderStyle, borderColor, fontColor, borderRadius, hoverColor, hoverBgColor, hoverBorderColor } = props\r\n    const clipboardTextHTML = `<div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize: '${btnFontSize}px', height: '${btnHeight}px', width: '${btnWidth}px', backgroundColor: '${bgColor}', border: '${borderSize}px ${borderStyle} ${borderColor}', color: '${fontColor}', borderRadius: '${borderRadius}px' }}>${text}</div>`\r\n    const ClipBoardTextHTMLPlain = `<div class=\"btn\">${text}</div>`\r\n    const clipboardTextCSS = `\r\n    .btn {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: ${btnFontSize}px;\r\n        height: ${btnHeight}px;\r\n        width: ${btnWidth}px;\r\n        background-color: ${bgColor};\r\n        border: ${borderSize}px ${borderStyle} ${borderColor};\r\n        color: ${fontColor};\r\n        borderRadius: ${borderRadius}px\r\n    }\r\n    \r\n    .btn:hover {\r\n        color: ${hoverColor};\r\n        background-color:${hoverBgColor};\r\n        border: ${borderSize}px ${borderStyle} ${hoverBorderColor};\r\n    }`\r\n    return ( \r\n        <StyledClipboard>\r\n            <ClipboardSection>\r\n                <h4>Copy code below to body section in your html file</h4>\r\n                <ClipboardText>\r\n                    {ClipBoardTextHTMLPlain}\r\n                </ClipboardText>\r\n                <CopyToClipboard text={ClipBoardTextHTMLPlain}><CopyButton>Copy HTML</CopyButton></CopyToClipboard>\r\n            </ClipboardSection>\r\n            <ClipboardSection>\r\n                <h4>Copy code below to your css file</h4>\r\n                <ClipboardText>\r\n                    {clipboardTextCSS}\r\n                </ClipboardText>\r\n                <CopyToClipboard text={clipboardTextCSS}><CopyButton>Copy CSS</CopyButton></CopyToClipboard>\r\n            </ClipboardSection>\r\n        </StyledClipboard>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\nimport styled from 'styled-components'\nimport Menu from \"./Menu\";\nimport Button from \"./Button\";\nimport Clipboard from \"./Clipboard\";\n\nconst StyledApp = styled.div`\ndisplay: flex;\n`\n\nconst AppContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\nalign-items: center;\njustify-content: center;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nheight: 600px;\n`\n\nfunction App() {\n  const [text, setText] = useState(\"Button\")\n  const [btnWidth, setWidthChange] = useState(\"200\")\n  const [btnHeight, setHeightChange] = useState(\"100\")\n  const [btnFontSize, setBtnFontSize] = useState(\"18\")\n  const [fontColor, setFontColor] = useState(\"black\")\n  const [bgColor, setBgColor] = useState(\"#BBB\")\n  const [borderSize, setBorderSize] = useState(\"0\")\n  const [borderStyle, setBorderStyle] = useState(\"solid\")\n  const [borderColor, setBorderColor] = useState(\"#bbb\")\n  const [borderRadius, setBorderRadius] = useState('0')\n  const [hoverColor, setHoverColor] = useState('')\n  const [hoverBgColor, setHoverBgColor] = useState('')\n  const [hoverBorderColor, setHoverBorderColor] = useState('')\n\n  const onTextChange = e => {\n    setText(e.target.value)\n  }\n\n  const onFontSizeChange = e => {\n    setBtnFontSize(e.target.value)\n  }\n\n  const onHeightChange = e => {\n    setHeightChange(e.target.value)\n  }\n\n  const onWidthChange = e => {\n    setWidthChange(e.target.value)\n  }\n\n  const onBorderSizeChange = e => {\n    setBorderSize(e.target.value)\n  }\n\n  const onBorderStyleChange = e => {\n    setBorderStyle(e.target.value)\n  }\n\n  return (\n    <StyledApp>\n      <Menu text={text} onTextChange={onTextChange} btnFontSize={btnFontSize} onFontSizeChange={onFontSizeChange} btnHeight={btnHeight}  onHeightChange={onHeightChange} btnWidth={btnWidth} onWidthChange={onWidthChange} setBgColor={setBgColor} bgColor={bgColor} borderSize={borderSize} onBorderSizeChange={onBorderSizeChange} borderStyle={borderStyle} onBorderStyleChange={onBorderStyleChange} borderColor={borderColor} setBorderColor={setBorderColor} fontColor={fontColor} setFontColor={setFontColor} borderRadius={borderRadius} setBorderRadius={setBorderRadius} hoverColor={hoverColor} setHoverColor={setHoverColor} hoverBgColor={hoverBgColor} setHoverBgColor={setHoverBgColor} hoverBorderColor={hoverBorderColor} setHoverBorderColor={setHoverBorderColor}/>\n      <AppContainer>\n        <ButtonContainer>\n          <Button text={text} btnFontSize={btnFontSize} btnHeight={btnHeight} btnWidth={btnWidth} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor} fontColor={fontColor} borderRadius={borderRadius} hoverColor={hoverColor} hoverBgColor={hoverBgColor} hoverBorderColor={hoverBorderColor}/>\n        </ButtonContainer>\n        <Clipboard text={text} btnFontSize={btnFontSize} btnHeight={btnHeight} btnWidth={btnWidth} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor} fontColor={fontColor} borderRadius={borderRadius} hoverColor={hoverColor} hoverBgColor={hoverBgColor} hoverBorderColor={hoverBorderColor}/>\n      </AppContainer>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}