{"version":3,"sources":["Menu.js","Button.js","Clipboard.js","App.js","index.js"],"names":["StyledMenu","styled","div","MenuNavbar","MenuButton","PickerButton","MenuSidebar","PickerContainer","Menu","props","text","onTextChange","btnFontSize","onFontSizeChange","btnHeight","btnWidth","onHeightChange","onWidthChange","bgColor","setBgColor","borderSize","onBorderSizeChange","borderStyle","onBorderStyleChange","borderColor","setBorderColor","fontColor","setFontColor","borderRadius","setBorderRadius","hoverColor","setHoverColor","hoverBgColor","setHoverBgColor","hoverBorderColor","setHoverBorderColor","url","onUrlChange","btnMargin","setBtnMargin","btnPadding","setBtnPadding","fontWeight","onFontWeightChange","textAlign","onTextAlignChange","transitionTime","onTransitionTimeChange","useState","showBgPicker","setShowBgPicker","showBorderPicker","setShowBorderPicker","showFontColorPicker","setShowFontColorPicker","showHoverColor","setShowHoverColor","showHoverBgColor","setShowHoverBgColor","showHoverBorderColor","setShowHoverBorderColor","isText","setIsText","isSize","setIsSize","isBorder","setIsBorder","isHover","setIsHover","isAnimation","setIsAnimation","onClick","for","id","type","placeholder","autoComplete","maxLength","onChange","value","min","max","color","updatedColor","hex","e","target","StyledButton","a","fontWeigth","prop","Button","href","StyledClipboard","ClipboardSection","CopyButton","ClipboardText","Clipboard","clipboardTextHTMLPlain","clipboardTextCSS","StyledApp","AppContainer","ButtonContainer","App","setText","setBtnFontSize","setFontWeight","setTextAlign","setUrl","setWidthChange","setHeightChange","setBorderSize","setBorderStyle","setTransitionTime","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2e64e15.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nconst StyledMenu = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  top: 0;\r\n  left: 0;\r\n  min-width: 320px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  input {\r\n    width: 300px;\r\n    outline: none;\r\n    padding: 2px;\r\n  }\r\n\r\n  select {\r\n    width: 310px;\r\n    padding: 2px;\r\n  }\r\n`;\r\n\r\nconst MenuNavbar = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: lightblue;\r\n  z-index: 2;\r\n`;\r\n\r\nconst MenuButton = styled.div`\r\n  padding: 5px;\r\n  background-color: lightblue;\r\n  cursor: pointer;\r\n  border-right: 1px solid lightseagreen;\r\n\r\n  &:hover {\r\n    background-color: orange;\r\n  }\r\n`;\r\n\r\nconst PickerButton = styled.div`\r\n  background-color: lightblue;\r\n  width: 310px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: orange;\r\n  }\r\n`;\r\n\r\nconst MenuSidebar = styled.div`\r\n  position: relative;\r\n  padding: 25px;\r\n  top: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: fit-content;\r\n  background-color: aliceblue;\r\n  height: fit-content;\r\n`;\r\n\r\nconst PickerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 15px;\r\n`;\r\n\r\nexport default function Menu(props) {\r\n  const {\r\n    text,\r\n    onTextChange,\r\n    btnFontSize,\r\n    onFontSizeChange,\r\n    btnHeight,\r\n    btnWidth,\r\n    onHeightChange,\r\n    onWidthChange,\r\n    bgColor,\r\n    setBgColor,\r\n    borderSize,\r\n    onBorderSizeChange,\r\n    borderStyle,\r\n    onBorderStyleChange,\r\n    borderColor,\r\n    setBorderColor,\r\n    fontColor,\r\n    setFontColor,\r\n    borderRadius,\r\n    setBorderRadius,\r\n    hoverColor,\r\n    setHoverColor,\r\n    hoverBgColor,\r\n    setHoverBgColor,\r\n    hoverBorderColor,\r\n    setHoverBorderColor,\r\n    url,\r\n    onUrlChange,\r\n    btnMargin,\r\n    setBtnMargin,\r\n    btnPadding,\r\n    setBtnPadding,\r\n    fontWeight,\r\n    onFontWeightChange,\r\n    textAlign,\r\n    onTextAlignChange,\r\n    transitionTime,\r\n    onTransitionTimeChange\r\n  } = props;\r\n  const [showBgPicker, setShowBgPicker] = useState(false);\r\n  const [showBorderPicker, setShowBorderPicker] = useState(false);\r\n  const [showFontColorPicker, setShowFontColorPicker] = useState(false);\r\n  const [showHoverColor, setShowHoverColor] = useState(false);\r\n  const [showHoverBgColor, setShowHoverBgColor] = useState(false);\r\n  const [showHoverBorderColor, setShowHoverBorderColor] = useState(false);\r\n\r\n  const [isText, setIsText] = useState(true);\r\n  const [isSize, setIsSize] = useState(false);\r\n  const [isBorder, setIsBorder] = useState(false);\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [isAnimation, setIsAnimation] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <MenuNavbar>\r\n        <MenuButton\r\n          onClick={() => {\r\n            setIsText(true);\r\n            setIsSize(false);\r\n            setIsBorder(false);\r\n            setIsHover(false);\r\n            setIsAnimation(false)\r\n          }}\r\n        >\r\n          Text\r\n        </MenuButton>\r\n        <MenuButton\r\n          onClick={() => {\r\n            setIsText(false);\r\n            setIsSize(true);\r\n            setIsBorder(false);\r\n            setIsHover(false);\r\n            setIsAnimation(false)\r\n          }}\r\n        >\r\n          Size\r\n        </MenuButton>\r\n        <MenuButton\r\n          onClick={() => {\r\n            setIsText(false);\r\n            setIsSize(false);\r\n            setIsBorder(true);\r\n            setIsHover(false);\r\n            setIsAnimation(false)\r\n          }}\r\n        >\r\n          Border\r\n        </MenuButton>\r\n        <MenuButton\r\n          onClick={() => {\r\n            setIsText(false);\r\n            setIsSize(false);\r\n            setIsBorder(false);\r\n            setIsHover(true);\r\n            setIsAnimation(false)\r\n          }}\r\n        >\r\n          Hover\r\n        </MenuButton>\r\n        <MenuButton\r\n          onClick={() => {\r\n            setIsText(false);\r\n            setIsSize(false);\r\n            setIsBorder(false);\r\n            setIsHover(false);\r\n            setIsAnimation(true)\r\n          }}\r\n        >\r\n          Animation\r\n        </MenuButton>\r\n      </MenuNavbar>\r\n      <StyledMenu>\r\n        {isText && (\r\n          <MenuSidebar>\r\n            <label for=\"text\">Text: </label>\r\n            <input\r\n              id=\"text\"\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              maxLength=\"50\"\r\n              onChange={onTextChange}\r\n              value={text}\r\n            />\r\n            <label for=\"fontSize\">Font size: </label>\r\n            <input\r\n              id=\"fontSize\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"64\"\r\n              onChange={onFontSizeChange}\r\n              value={btnFontSize}\r\n            />\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowFontColorPicker(!showFontColorPicker);\r\n              }}\r\n            >\r\n              Font color\r\n            </PickerButton>\r\n            {showFontColorPicker && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={fontColor}\r\n                  onChange={(updatedColor) => setFontColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n            <label for=\"fontWeight\">Font weight: </label>\r\n            <select\r\n              id=\"fontWeight\"\r\n              value={fontWeight}\r\n              onChange={onFontWeightChange}\r\n            >\r\n              <option value=\"100\">thin</option>\r\n              <option value=\"400\">regular</option>\r\n              <option value=\"700\">bold</option>\r\n            </select>\r\n            <label for=\"textAlign\">Text justify: </label>\r\n            <select\r\n              id=\"textAlign\"\r\n              value={textAlign}\r\n              onChange={onTextAlignChange}\r\n            >\r\n              <option value=\"flex-start\">left</option>\r\n              <option value=\"center\">center</option>\r\n              <option value=\"flex-end\">right</option>\r\n            </select>\r\n            <label for=\"url\">Url: </label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"text\"\r\n              placeholder=\"https://\"\r\n              autoComplete=\"off\"\r\n              maxLength=\"100\"\r\n              onChange={onUrlChange}\r\n              value={url}\r\n            />\r\n          </MenuSidebar>\r\n        )}\r\n\r\n        {isSize && (\r\n          <MenuSidebar>\r\n            <label for=\"width\">Width: </label>\r\n            <input\r\n              id=\"width\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"1200\"\r\n              onChange={onWidthChange}\r\n              value={btnWidth}\r\n            />\r\n            <label for=\"height\">Height: </label>\r\n            <input\r\n              id=\"height\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"450\"\r\n              onChange={onHeightChange}\r\n              value={btnHeight}\r\n            />\r\n            <label for=\"padding\">Padding: </label>\r\n            <input\r\n              id=\"padding\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"500\"\r\n              onChange={(e) => {\r\n                setBtnPadding(e.target.value);\r\n              }}\r\n              value={btnPadding}\r\n            />\r\n            <label for=\"margin\">Margin: </label>\r\n            <input\r\n              id=\"margin\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"500\"\r\n              onChange={(e) => {\r\n                setBtnMargin(e.target.value);\r\n              }}\r\n              value={btnMargin}\r\n            />\r\n\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowBgPicker(!showBgPicker);\r\n              }}\r\n            >\r\n              Background color\r\n            </PickerButton>\r\n            {showBgPicker && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={bgColor}\r\n                  onChange={(updatedColor) => setBgColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n          </MenuSidebar>\r\n        )}\r\n        {isBorder && (\r\n          <MenuSidebar>\r\n            <label for=\"border-size\">Border size: </label>\r\n            <input\r\n              id=\"border-size\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              onChange={onBorderSizeChange}\r\n              value={borderSize}\r\n            />\r\n            <label for=\"borderStyle\">Border style: </label>\r\n            <select\r\n              id=\"borderStyle\"\r\n              value={borderStyle}\r\n              onChange={onBorderStyleChange}\r\n            >\r\n              <option value=\"solid\">solid</option>\r\n              <option value=\"dotted\">dotted</option>\r\n              <option value=\"dashed\">dashed</option>\r\n              <option value=\"double\">double</option>\r\n            </select>\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowBorderPicker(!showBorderPicker);\r\n              }}\r\n            >\r\n              Border color\r\n            </PickerButton>\r\n            {showBorderPicker && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={borderColor}\r\n                  onChange={(updatedColor) => setBorderColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n            <label for=\"border-radius\">Border radius: </label>\r\n            <input\r\n              id=\"border-radius\"\r\n              type=\"number\"\r\n              placeholder=\"\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"180\"\r\n              onChange={(e) => {\r\n                setBorderRadius(e.target.value);\r\n              }}\r\n              value={borderRadius}\r\n            />\r\n          </MenuSidebar>\r\n        )}\r\n        {isHover && (\r\n          <MenuSidebar>\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowHoverColor(!showHoverColor);\r\n              }}\r\n            >\r\n              Hover font color\r\n            </PickerButton>\r\n            {showHoverColor && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={hoverColor}\r\n                  onChange={(updatedColor) => setHoverColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowHoverBgColor(!showHoverBgColor);\r\n              }}\r\n            >\r\n              Hover background color\r\n            </PickerButton>\r\n            {showHoverBgColor && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={hoverBgColor}\r\n                  onChange={(updatedColor) => setHoverBgColor(updatedColor.hex)}\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n            <PickerButton\r\n              onClick={() => {\r\n                setShowHoverBorderColor(!showHoverBorderColor);\r\n              }}\r\n            >\r\n              Hover border color\r\n            </PickerButton>\r\n            {showHoverBorderColor && (\r\n              <PickerContainer>\r\n                <ChromePicker\r\n                  color={hoverBorderColor}\r\n                  onChange={(updatedColor) =>\r\n                    setHoverBorderColor(updatedColor.hex)\r\n                  }\r\n                ></ChromePicker>\r\n              </PickerContainer>\r\n            )}\r\n          </MenuSidebar>\r\n        )}\r\n        {isAnimation && (\r\n            <MenuSidebar>\r\n                <label for=\"transitionTime\">Transition time: </label>\r\n            <input\r\n              id=\"transitionTime\"\r\n              type=\"number\"\r\n              placeholder=\"in miliseconds\"\r\n              autoComplete=\"off\"\r\n              min=\"0\"\r\n              max=\"5000\"\r\n              onChange={onTransitionTimeChange}\r\n              value={transitionTime}\r\n            />\r\n            </MenuSidebar>\r\n        )}\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.a`\r\n  background-color: ${props => props.bgColor};\r\n  display: flex;\r\n  justify-content: ${props => props.textAlign};\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  cursor: pointer;\r\n  width: ${props => props.btnWidth}px;\r\n  height: ${props => props.btnHeight}px;\r\n  border: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.borderColor};\r\n  border-radius: ${props => props.borderRadius}px;\r\n  font-size: ${props => props.btnFontSize}px;\r\n  color: ${props => props.fontColor};\r\n  text-decoration: none;\r\n  padding: ${props => props.btnPadding}px;\r\n  margin: ${props => props.btnMargin}px;\r\n  font-weight: ${props => props.fontWeigth};\r\n  transition: all ${prop=>prop.transitionTime}ms ease-in-out;\r\n\r\n  &:hover {\r\n    color: ${props => props.hoverColor};\r\n    background-color: ${props => props.hoverBgColor};\r\n    border: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.hoverBorderColor};\r\n  }\r\n`;\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    text,\r\n    btnFontSize,\r\n    btnHeight,\r\n    btnWidth,\r\n    bgColor,\r\n    borderSize,\r\n    borderStyle,\r\n    borderColor,\r\n    fontColor,\r\n    borderRadius,\r\n    hoverColor,\r\n    hoverBgColor,\r\n    hoverBorderColor,\r\n    url,\r\n    btnMargin,\r\n    btnPadding,\r\n    fontWeigth,\r\n    textAlign,\r\n    transitionTime\r\n  } = props;\r\n  return (\r\n    <StyledButton\r\n      btnFontSize={btnFontSize}\r\n      fontColor={fontColor}\r\n      btnWidth={btnWidth}\r\n      btnHeight={btnHeight}\r\n      bgColor={bgColor}\r\n      borderSize={borderSize}\r\n      borderStyle={borderStyle}\r\n      borderColor={borderColor}\r\n      borderRadius={borderRadius}\r\n      hoverColor={hoverColor}\r\n      hoverBgColor={hoverBgColor}\r\n      hoverBorderColor={hoverBorderColor}\r\n      href={'https://'+url}\r\n      btnMargin={btnMargin}\r\n      btnPadding={btnPadding}\r\n      fontWeigth={fontWeigth}\r\n      textAlign={textAlign}\r\n      transitionTime={transitionTime}\r\n    >\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst StyledClipboard = styled.div`\r\n  height: 300px;\r\n  width: 800px;\r\n  background-color: aliceblue;\r\n  border: 1px solid lightblue;\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst ClipboardSection = styled.div`\r\n  margin: 10px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h4 {\r\n    margin: 1px;\r\n  }\r\n`;\r\n\r\nconst CopyButton = styled.div`\r\n  height: 26px;\r\n  width: 90%;\r\n  background-color: lightblue;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: orange;\r\n  }\r\n`;\r\n\r\nconst ClipboardText = styled.div`\r\n  margin: 5px;\r\n  text-align: center;\r\n  background-color: white;\r\n  border: 1px solid lightblue;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport default function Clipboard(props) {\r\n  const {\r\n    text,\r\n    btnFontSize,\r\n    btnHeight,\r\n    btnWidth,\r\n    bgColor,\r\n    borderSize,\r\n    borderStyle,\r\n    borderColor,\r\n    fontColor,\r\n    borderRadius,\r\n    hoverColor,\r\n    hoverBgColor,\r\n    hoverBorderColor,\r\n    url,\r\n    btnMargin,\r\n    btnPadding,\r\n    fontWeight, \r\n    textAlign,\r\n    transitionTime\r\n  } = props;\r\n  const clipboardTextHTMLPlain = `<a class=\"btn\" href='https://${url}'>${text}</a>`;\r\n  const clipboardTextCSS = `\r\n    .btn {\r\n        display: flex;\r\n        justify-content: ${textAlign};\r\n        align-items: center;\r\n        font-size: ${btnFontSize}px;\r\n        height: ${btnHeight}px;\r\n        width: ${btnWidth}px;\r\n        background-color: ${bgColor};\r\n        border: ${borderSize}px ${borderStyle} ${borderColor};\r\n        color: ${fontColor};\r\n        border-radius: ${borderRadius}px;\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        padding: ${btnPadding}px;\r\n        margin: ${btnMargin}px;\r\n        font-weight: ${fontWeight};\r\n        transition: all ${transitionTime}ms ease-in-out;\r\n    }\r\n    \r\n    .btn:hover {\r\n        color: ${hoverColor};\r\n        background-color:${hoverBgColor};\r\n        border: ${borderSize}px ${borderStyle} ${hoverBorderColor};\r\n    }`;\r\n  return (\r\n    <StyledClipboard>\r\n      <ClipboardSection>\r\n        <h4>\r\n          Copy code below and paste it into body section in your html file\r\n        </h4>\r\n        <ClipboardText>{clipboardTextHTMLPlain}</ClipboardText>\r\n        <CopyToClipboard text={clipboardTextHTMLPlain}>\r\n          <CopyButton>Copy HTML</CopyButton>\r\n        </CopyToClipboard>\r\n      </ClipboardSection>\r\n      <ClipboardSection>\r\n        <h4>Copy code below and paste it into your css file</h4>\r\n        <ClipboardText>{clipboardTextCSS}</ClipboardText>\r\n        <CopyToClipboard text={clipboardTextCSS}>\r\n          <CopyButton>Copy CSS</CopyButton>\r\n        </CopyToClipboard>\r\n      </ClipboardSection>\r\n    </StyledClipboard>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Menu from \"./Menu\";\nimport Button from \"./Button\";\nimport Clipboard from \"./Clipboard\";\n\nconst StyledApp = styled.div`\n  display: flex;\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 500px;\n`;\n\nfunction App() {\n  const [text, setText] = useState(\"sample button\");\n  const [btnFontSize, setBtnFontSize] = useState(\"18\");\n  const [fontColor, setFontColor] = useState(\"black\");\n  const [fontWeight, setFontWeight] = useState(\"400\")\n  const [textAlign, setTextAlign] = useState(\"center\")\n  const [url, setUrl] = useState(\"\");\n\n  const [btnWidth, setWidthChange] = useState(\"200\");\n  const [btnHeight, setHeightChange] = useState(\"100\");\n  const [btnPadding, setBtnPadding] = useState(\"0\")\n  const [btnMargin, setBtnMargin] = useState(\"0\")\n  const [bgColor, setBgColor] = useState(\"#BBB\");\n\n  const [borderSize, setBorderSize] = useState(\"0\");\n  const [borderStyle, setBorderStyle] = useState(\"solid\");\n  const [borderColor, setBorderColor] = useState(\"#bbb\");\n  const [borderRadius, setBorderRadius] = useState(\"0\");\n  \n  const [hoverColor, setHoverColor] = useState(\"default\");\n  const [hoverBgColor, setHoverBgColor] = useState(\"default\");\n  const [hoverBorderColor, setHoverBorderColor] = useState(\"default\");\n\n  const [transitionTime, setTransitionTime] = useState(\"1\")\n  \n\n\n  const onTextChange = (e) => {\n    setText(e.target.value);\n  };\n  \n  const onUrlChange = (e) => {\n    setUrl(e.target.value);\n  };\n\n  const onFontWeightChange = (e) => {\n    setFontWeight(e.target.value);\n    console.log(fontWeight)\n  };\n\n  const onTextAlignChange = (e) => {\n    setTextAlign(e.target.value);\n  };\n\n  const onFontSizeChange = (e) => {\n    setBtnFontSize(e.target.value);\n  };\n\n  const onHeightChange = (e) => {\n    setHeightChange(e.target.value);\n  };\n\n  const onWidthChange = (e) => {\n    setWidthChange(e.target.value);\n  };\n\n  const onBorderSizeChange = (e) => {\n    setBorderSize(e.target.value);\n  };\n\n  const onBorderStyleChange = (e) => {\n    setBorderStyle(e.target.value);\n  };\n\n  const onTransitionTimeChange = (e) => {\n    setTransitionTime(e.target.value)\n  }\n\n\n  return (\n    <StyledApp>\n      <Menu\n        text={text}\n        onTextChange={onTextChange}\n        btnFontSize={btnFontSize}\n        onFontSizeChange={onFontSizeChange}\n        btnHeight={btnHeight}\n        onHeightChange={onHeightChange}\n        btnWidth={btnWidth}\n        onWidthChange={onWidthChange}\n        setBgColor={setBgColor}\n        bgColor={bgColor}\n        borderSize={borderSize}\n        onBorderSizeChange={onBorderSizeChange}\n        borderStyle={borderStyle}\n        onBorderStyleChange={onBorderStyleChange}\n        borderColor={borderColor}\n        setBorderColor={setBorderColor}\n        fontColor={fontColor}\n        setFontColor={setFontColor}\n        borderRadius={borderRadius}\n        setBorderRadius={setBorderRadius}\n        hoverColor={hoverColor}\n        setHoverColor={setHoverColor}\n        hoverBgColor={hoverBgColor}\n        setHoverBgColor={setHoverBgColor}\n        hoverBorderColor={hoverBorderColor}\n        setHoverBorderColor={setHoverBorderColor}\n        url={url}\n        onUrlChange={onUrlChange}\n        btnMargin={btnMargin}\n        setBtnMargin={setBtnMargin}\n        btnPadding={btnPadding}\n        setBtnPadding={setBtnPadding}\n        fontWeight={fontWeight}\n        onFontWeightChange={onFontWeightChange}\n        textAlign={textAlign}\n        onTextAlignChange={onTextAlignChange}\n        transitionTime={transitionTime}\n        onTransitionTimeChange={onTransitionTimeChange}\n      />\n      <AppContainer>\n        <ButtonContainer>\n          <Button\n            text={text}\n            btnFontSize={btnFontSize}\n            btnHeight={btnHeight}\n            btnWidth={btnWidth}\n            bgColor={bgColor}\n            borderSize={borderSize}\n            borderStyle={borderStyle}\n            borderColor={borderColor}\n            fontColor={fontColor}\n            borderRadius={borderRadius}\n            hoverColor={hoverColor}\n            hoverBgColor={hoverBgColor}\n            hoverBorderColor={hoverBorderColor}\n            url={url}\n            btnMargin={btnMargin}\n            btnPadding={btnPadding}\n            textAlign={textAlign}\n            fontWeight={fontWeight}\n            transitionTime={transitionTime}\n\n          />\n        </ButtonContainer>\n        <Clipboard\n          text={text}\n          btnFontSize={btnFontSize}\n          btnHeight={btnHeight}\n          btnWidth={btnWidth}\n          bgColor={bgColor}\n          borderSize={borderSize}\n          borderStyle={borderStyle}\n          borderColor={borderColor}\n          fontColor={fontColor}\n          borderRadius={borderRadius}\n          hoverColor={hoverColor}\n          hoverBgColor={hoverBgColor}\n          hoverBorderColor={hoverBorderColor}\n          url={url}\n          btnMargin={btnMargin}\n          btnPadding={btnPadding}\n          textAlign={textAlign}\n          fontWeight={fontWeight}\n          transitionTime={transitionTime}\n        />\n      </AppContainer>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}