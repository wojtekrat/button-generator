{"version":3,"sources":["Menu.js","Button.js","Clipboard.js","App.js","index.js"],"names":["StyledMenu","styled","div","PickerButton","Menu","props","text","onTextChange","btnFontSize","onFontSizeChange","btnHeight","btnWidth","onHeightChange","onWidthChange","bgColor","setBgColor","borderSize","onBorderSizeChange","borderStyle","onBorderStyleChange","borderColor","setBorderColor","fontColor","setFontColor","useState","showBgPicker","setShowBgPicker","showBorderPicker","setShowBorderPicker","showFontColorPicker","setShowFontColorPicker","for","id","type","placeholder","autoComplete","maxLength","onChange","value","min","max","onClick","color","updatedColor","hex","StyledButton","StyledText","p","Button","StyledClipboard","CopyButton","ClipboardText","Clipboard","clipboardText","StyledApp","AppContainer","ButtonContainer","App","setText","setWidthChange","setHeightChange","setBtnFontSize","setBorderSize","setBorderStyle","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd91f691.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {ChromePicker } from 'react-color'\r\n\r\nconst StyledMenu = styled.div`\r\nposition: relative;\r\npadding: 20px;\r\ntop: 0;\r\nleft: 0;\r\nmin-width: 320px;\r\nheight: 100%;\r\nbackground-color: aliceblue;\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\ninput {\r\n    width: 300px;\r\n}\r\n\r\nselect {\r\n    width: 300px;\r\n}\r\n`\r\n\r\nconst PickerButton = styled.div`\r\nheight: 30px;\r\nwidth: 300px;\r\nbackground-color: lightblue;\r\npadding: 5px;\r\nmargin-top: 10px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center ;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\nexport default function Menu(props) {\r\n    const {text, onTextChange, btnFontSize, onFontSizeChange, btnHeight, btnWidth, onHeightChange, onWidthChange, bgColor, setBgColor, borderSize, onBorderSizeChange, borderStyle, onBorderStyleChange, borderColor, setBorderColor, fontColor, setFontColor} = props\r\n    const [showBgPicker, setShowBgPicker] = useState(false)\r\n    const [showBorderPicker, setShowBorderPicker] = useState(false)\r\n    const [showFontColorPicker, setShowFontColorPicker] = useState(false)\r\n\r\n    return (\r\n        <StyledMenu>\r\n            <label for=\"text\">Text: </label>\r\n            <input id=\"text\" type=\"text\" placeholder=\"\" autoComplete=\"off\" maxLength=\"50\" onChange={onTextChange} value={text} />\r\n            <label for=\"width\">Width: </label>\r\n            <input id=\"width\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"1500\" onChange={onWidthChange} value={btnWidth} />\r\n            <label for=\"height\">Height: </label>\r\n            <input id=\"height\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"500\" onChange={onHeightChange} value={btnHeight} />\r\n            <label for=\"fontSize\">Font size: </label>\r\n            <input id=\"fontSize\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" max=\"64\" onChange={onFontSizeChange} value={btnFontSize} />\r\n            <PickerButton onClick={()=>{setShowFontColorPicker(!showFontColorPicker)}}>Font color</PickerButton>\r\n            {showFontColorPicker &&\r\n            <ChromePicker color={fontColor} onChange={updatedColor => setFontColor(updatedColor.hex)}>\r\n\r\n            </ChromePicker>\r\n            }\r\n            <PickerButton onClick={()=>{setShowBgPicker(!showBgPicker)}}>Background color</PickerButton>\r\n            {showBgPicker &&\r\n            <ChromePicker color={bgColor} onChange={updatedColor => setBgColor(updatedColor.hex)}>\r\n\r\n            </ChromePicker>\r\n            }\r\n            <label for=\"border-size\">Border size: </label>\r\n            <input id=\"border-size\" type=\"number\" placeholder=\"\" autoComplete=\"off\" min=\"0\" onChange={onBorderSizeChange} value={borderSize} />\r\n            <label for=\"borderStyle\">Border style: </label>\r\n            <select id=\"borderStyle\" value={borderStyle} onChange={onBorderStyleChange}>\r\n                <option value=\"solid\">solid</option>\r\n                <option value=\"dotted\">dotted</option>\r\n                <option value=\"dashed\">dashed</option>\r\n                <option value=\"double\">double</option>\r\n            </select>\r\n            <PickerButton onClick={()=>{setShowBorderPicker(!showBorderPicker)}}>Border color</PickerButton>\r\n            {showBorderPicker &&\r\n            <ChromePicker color={borderColor} onChange={updatedColor => setBorderColor(updatedColor.hex)}>\r\n\r\n            </ChromePicker>\r\n            }\r\n        </StyledMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.div`\r\nbackground-color: ${props => props.bgColor};\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\ncursor: pointer;\r\nwidth: ${props => props.btnWidth}px;\r\nheight: ${props => props.btnHeight}px;\r\nborder: ${props => props.borderSize}px ${props => props.borderStyle} ${props => props.borderColor};\r\n`\r\n\r\nconst StyledText = styled.p`\r\nmargin: 0;\r\nfont-size: ${props => props.btnFontSize}px;\r\ncolor: ${props => props.fontColor};\r\n`\r\n\r\nexport default function Button(props) {\r\n    const {\r\n        text, btnFontSize, btnHeight, btnWidth, bgColor, borderSize, borderStyle, borderColor, fontColor\r\n    } = props\r\n    return (\r\n        <StyledButton btnWidth={btnWidth} btnHeight={btnHeight} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor}>\r\n            <StyledText btnFontSize={btnFontSize} fontColor={fontColor}>{text}</StyledText>\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst StyledClipboard = styled.div`\r\nheight: 160px;\r\nwidth: 800px;\r\nbackground-color: aliceblue;\r\nborder: 1px solid lightblue;\r\ncolor: black;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\n\r\nconst CopyButton = styled.div`\r\nheight: 26px;\r\nwidth: 90%;\r\nbackground-color: lightblue;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin: 5px;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\nconst ClipboardText = styled.div`\r\npadding: 5px;\r\ntext-align: center;\r\n\r\n`\r\n\r\nexport default function Clipboard(props) {\r\n    const {text, btnFontSize, btnHeight, btnWidth, bgColor, borderSize, borderStyle, borderColor, fontColor } = props\r\n    const clipboardText = `<div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize: '${btnFontSize}px', height: '${btnHeight}px', width: '${btnWidth}px', backgroundColor: '${bgColor}', border: '${borderSize}px ${borderStyle} ${borderColor}', color: '${fontColor}'  }}>${text}</div>`\r\n    return ( \r\n        <StyledClipboard>\r\n            <ClipboardText>\r\n                {clipboardText}\r\n            </ClipboardText>\r\n            <CopyToClipboard text={clipboardText}><CopyButton>Copy</CopyButton></CopyToClipboard>\r\n        </StyledClipboard>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\nimport styled from 'styled-components'\nimport Menu from \"./Menu\";\nimport Button from \"./Button\";\nimport Clipboard from \"./Clipboard\";\n\nconst StyledApp = styled.div`\ndisplay: flex;\n`\n\nconst AppContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\nalign-items: center;\njustify-content: center;\n`\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nheight: 600px;\n`\n\nfunction App() {\n  const [text, setText] = useState(\"Button\")\n  const [btnWidth, setWidthChange] = useState(\"200\")\n  const [btnHeight, setHeightChange] = useState(\"100\")\n  const [btnFontSize, setBtnFontSize] = useState(\"18\")\n  const [fontColor, setFontColor] = useState(\"black\")\n  const [bgColor, setBgColor] = useState(\"#BBB\")\n  const [borderSize, setBorderSize] = useState(\"0\")\n  const [borderStyle, setBorderStyle] = useState(\"solid\")\n  const [borderColor, setBorderColor] = useState(\"#bbb\")\n\n  const onTextChange = e => {\n    setText(e.target.value)\n  }\n\n  const onFontSizeChange = e => {\n    setBtnFontSize(e.target.value)\n  }\n\n  const onHeightChange = e => {\n    setHeightChange(e.target.value)\n  }\n\n  const onWidthChange = e => {\n    setWidthChange(e.target.value)\n  }\n\n  const onBorderSizeChange = e => {\n    setBorderSize(e.target.value)\n  }\n\n  const onBorderStyleChange = e => {\n    setBorderStyle(e.target.value)\n  }\n\n  return (\n    <StyledApp>\n          <Menu text={text} onTextChange={onTextChange} btnFontSize={btnFontSize} onFontSizeChange={onFontSizeChange} btnHeight={btnHeight}  onHeightChange={onHeightChange} btnWidth={btnWidth} onWidthChange={onWidthChange} setBgColor={setBgColor} bgColor={bgColor} borderSize={borderSize} onBorderSizeChange={onBorderSizeChange} borderStyle={borderStyle} onBorderStyleChange={onBorderStyleChange} borderColor={borderColor} setBorderColor={setBorderColor} fontColor={fontColor} setFontColor={setFontColor}/>\n          <AppContainer>\n          <ButtonContainer>\n            <Button text={text} btnFontSize={btnFontSize} btnHeight={btnHeight} btnWidth={btnWidth} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor} fontColor={fontColor}/>\n          </ButtonContainer>\n          <Clipboard text={text} btnFontSize={btnFontSize} btnHeight={btnHeight} btnWidth={btnWidth} bgColor={bgColor} borderSize={borderSize} borderStyle={borderStyle} borderColor={borderColor} fontColor={fontColor}/>\n      </AppContainer>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}